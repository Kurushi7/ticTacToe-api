FROM alpine:3.10.2

# make sure you can use HTTPS
RUN apk --update add ca-certificates

#Install packages
RUN apk --no-cache add php7 php7-fpm php7-mysqli php7-pdo php7-pdo_mysql php7-json php7-zip php7-openssl php7-curl\
    php7-zlib php7-xml php7-phar php7-intl php7-dom php7-xmlreader php7-opcache php7-ctype\
    php7-zlib php7-xml php7-phar php7-intl php7-dom php7-xmlreader php7-opcache php7-ctype\
    php7-mbstring php7-gd php7-xmlwriter php7-tokenizer php7-simplexml php7-fileinfo\
    php7-mcrypt php7-gmp php7-pcntl php7-posix php7-ftp php7-iconv php7-session\
    nginx supervisor curl git unzip htop bash

#Configure nginx
COPY docker/config/nginx.conf /etc/nginx/nginx.conf

# Configure PHP-FPM
COPY docker/config/fpm-pool.conf /etc/php7/php-fpm.d/www.conf
COPY docker/config/php.ini /etc/php7/conf.d/fpm-php.ini

# Configure supervisord
COPY docker/config/supervisord.conf /etc/supervisor/conf.d/supervisord.conf

# Make sure files/folders needed by the processes are accessable when they run under the www user
RUN chown -R nobody.nobody /run && \
  chown -R nobody.nobody /var/lib/nginx && \
  chown -R nobody.nobody /var/tmp/nginx && \
  chown -R nobody.nobody /var/log/nginx

# Create the document root; its not created by default in Alpine -.-
RUN mkdir -p /var/www/html

# Make the document root a volume
# VOLUME /var/www/html

ENV COMPOSER_HOME /composer
ENV PATH ./vendor/bin:/composer/vendor/bin:$PATH
ENV COMPOSER_ALLOW_SUPERUSER 1
RUN curl -s https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin/ --filename=composer


# Add application
WORKDIR /var/www/html
COPY --chown=nobody . /var/www/html/

RUN mkdir -p /var/www/html/storage/framework/cache/data

RUN chown -R nobody:nobody /var/www/html/storage/logs && \
     chown -R nobody:nobody /var/www/html/storage/framework

#Install production dependencies
RUN composer install --no-interaction --optimize-autoloader

# Switch to use a non-root user from here on
USER nobody

# Expose the port nginx is reachable on
EXPOSE 8080

# Let supervisord start nginx & php-fpm
CMD ["/usr/bin/supervisord", "-c", "/etc/supervisor/conf.d/supervisord.conf"]

# Configure a healthcheck to validate that everything is up&running
HEALTHCHECK --timeout=10s CMD curl --silent --fail http://127.0.0.1:8080/fpm-ping
